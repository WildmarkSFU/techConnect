{
  "version": 3,
  "sources": ["../src/lib/with-lit-dialog.ts"],
  "sourcesContent": ["import { LitElement } from 'lit';\nimport { createRef, Ref } from 'lit/directives/ref.js';\nimport LitDialog from './lit-dialog';\n\n/**\n * Generic constructor type used for mixins.\n * See [Lit docs on TypeScript mixins](https://lit.dev/docs/composition/mixins/#mixins-in-typescript)\n * and [TypeScript docs on constrained mixins](https://www.typescriptlang.org/docs/handbook/mixins.html#constrained-mixins).\n */\nexport type GConstructor<T = {}> = new (...args: any[]) => T;\n\n/** An interface for classes that use the [[WithLitDialog]] mixin. */\nexport declare class WithLitDialogInterface {\n  /** A reference to a [[LitDialog | `<lit-dialog>`]] element. */\n  litDialogRef: Ref<LitDialog>;\n\n  /** A convenience wrapper around [[LitDialog.close]]. */\n  closeDialog(): void;\n}\n\n/**\n * A mixin for any custom element that uses a [[LitDialog | `<lit-dialog>`]] in its composition.\n * It adds a reference to the `<lit-dialog>` (that you still need to manually apply\n * using the [ref](https://lit.dev/docs/templates/directives/#ref) directive)\n * and a wrapper around [[LitDialog.close]].\n *\n * See [Lit documentation for mixins](https://lit.dev/docs/composition/mixins/).\n */\nexport const WithLitDialog = <T extends GConstructor<LitElement>>(superclass: T) => {\n  class LitElementWithLitDialog extends superclass {\n    litDialogRef: Ref<LitDialog> = createRef();\n\n    closeDialog() {\n      this.litDialogRef.value?.close();\n    }\n  }\n\n  return LitElementWithLitDialog as GConstructor<WithLitDialogInterface> & T;\n};\n"],
  "mappings": "AACA,SAAS,iBAAsB;AA2BxB,MAAM,gBAAgB,CAAqC,eAAkB;AAAA,EAClF,MAAM,gCAAgC,WAAW;AAAA,IAAjD;AAAA;AACE,0BAA+B,UAAU;AAAA;AAAA,IAEzC,cAAc;AACZ,WAAK,aAAa,OAAO,MAAM;AAAA,IACjC;AAAA,EACF;AAEA,SAAO;AACT;",
  "names": []
}
