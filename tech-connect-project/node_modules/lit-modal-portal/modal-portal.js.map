{
  "version": 3,
  "sources": ["src/modal-portal.ts"],
  "sourcesContent": ["import { LitElement, html, css } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { ref, createRef, Ref } from 'lit/directives/ref.js';\nimport { List, is } from 'immutable';\n\nimport modalC, { KeyedTemplateResult } from './modal-controller';\nimport { MapOf, StatefulElement } from './lib/state';\n\n/** @internal State accepted by the [[ModalPortal]]. */\nexport type ModalPortalState = {\n  modalStack: List<KeyedTemplateResult>;\n};\n\n/**\n * A component that manages the rendering of Lit templates given by the [[ModalController]].\n * It should be placed at the end of the `<body>` tag in you application like so:\n *\n * ```html\n *  <!DOCTYPE html>\n *  <html>\n *    <head>\n *      <!-- meta, scripts, etc. -->\n *    </head>\n *    <body>\n *      <my-lit-app></my-lit-app>\n *      <modal-portal></modal-portal>\n *    </body>\n *  </html>\n * ```\n *\n * This element listens to the `\"removeModal\"` event.\n * Upon receiving the event, it inspects the event's `composedPath()` the determine\n * which modal the event came from and removes that one.\n */\n@customElement('modal-portal')\nexport default class ModalPortal extends LitElement implements StatefulElement<ModalPortalState> {\n  static styles = css`\n    #portal {\n      isolation: isolate;\n    }\n  `;\n\n  @state()\n  private modalStack: List<KeyedTemplateResult> = List();\n\n  private portalRef: Ref<HTMLElement> = createRef();\n\n  /**\n   * A list of the modals currently present in the DOM. Used by the [[ModalController]].\n   */\n  get modalNodes(): HTMLCollection | undefined {\n    return this.portalRef.value?.children;\n  }\n\n  constructor() {\n    super();\n    modalC.attach(this);\n  }\n\n  /**\n   * Used by the [[ModalController]] when a modal is added or removed.\n   * Updates the `<body>` element to have the `\"modal-portal-active\"` class\n   * precisely when the `<modal-portal>` contains at least one modal.\n   */\n  offerState(newState: MapOf<ModalPortalState>) {\n    if (!is(this.modalStack, newState.get('modalStack'))) {\n      this.modalStack = newState.get('modalStack');\n      if (this.modalStack.size > 0) {\n        document.querySelector('body').classList.add('modal-portal-active');\n      } else {\n        document.querySelector('body').classList.remove('modal-portal-active');\n      }\n    }\n  }\n\n  /**\n   * Inspects the `composedPath()` of the given event and removes the modal that\n   * intersects with the path, if any.\n   */\n  protected removeModal = (e: Event) => {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    // Locate portal in event path and grab child modal-node.\n    const eventPath = e.composedPath();\n    const portalEventPathIndex = eventPath.findIndex((el) => el === this.portalRef.value);\n    if (portalEventPathIndex < 1) {\n      console.warn(\n        'Could not locate modal portal at appropriate depth in the @removeModal event path',\n      );\n    } else {\n      const modalNode = eventPath[portalEventPathIndex - 1];\n      modalC.removeByNode(modalNode);\n    }\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('removeModal', this.removeModal);\n  }\n\n  render() {\n    return html`\n      <div id=\"portal\" ${ref(this.portalRef)}>\n        ${repeat(\n          this.modalStack?.values(),\n          (modal) => modal.key,\n          (modal) => html`<div class=\"modal-node\">${modal}</div>`,\n        )}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'modal-portal': ModalPortal;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,YAAY,MAAM,WAAW;AACtC,SAAS,eAAe,aAAa;AACrC,SAAS,cAAc;AACvB,SAAS,KAAK,iBAAsB;AACpC,SAAS,MAAM,UAAU;AAEzB,OAAO,YAAqC;AA8B5C,IAAqB,cAArB,cAAyC,WAAwD;AAAA,EAmB/F,cAAc;AACZ,UAAM;AAZR,SAAQ,aAAwC,KAAK;AAErD,SAAQ,YAA8B,UAAU;AAkChD;AAAA;AAAA;AAAA;AAAA,SAAU,cAAc,CAAC,MAAa;AACpC,QAAE,yBAAyB;AAC3B,QAAE,eAAe;AAGjB,YAAM,YAAY,EAAE,aAAa;AACjC,YAAM,uBAAuB,UAAU,UAAU,CAAC,OAAO,OAAO,KAAK,UAAU,KAAK;AACpF,UAAI,uBAAuB,GAAG;AAC5B,gBAAQ;AAAA,UACN;AAAA,QACF;AAAA,MACF,OAAO;AACL,cAAM,YAAY,UAAU,uBAAuB,CAAC;AACpD,eAAO,aAAa,SAAS;AAAA,MAC/B;AAAA,IACF;AAtCE,WAAO,OAAO,IAAI;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAPA,IAAI,aAAyC;AAC3C,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,WAAW,UAAmC;AAC5C,QAAI,CAAC,GAAG,KAAK,YAAY,SAAS,IAAI,YAAY,CAAC,GAAG;AACpD,WAAK,aAAa,SAAS,IAAI,YAAY;AAC3C,UAAI,KAAK,WAAW,OAAO,GAAG;AAC5B,iBAAS,cAAc,MAAM,EAAE,UAAU,IAAI,qBAAqB;AAAA,MACpE,OAAO;AACL,iBAAS,cAAc,MAAM,EAAE,UAAU,OAAO,qBAAqB;AAAA,MACvE;AAAA,IACF;AAAA,EACF;AAAA,EAuBA,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,SAAK,iBAAiB,eAAe,KAAK,WAAW;AAAA,EACvD;AAAA,EAEA,SAAS;AACP,WAAO;AAAA,yBACc,IAAI,KAAK,SAAS,CAAC;AAAA,UAClC;AAAA,MACA,KAAK,YAAY,OAAO;AAAA,MACxB,CAAC,UAAU,MAAM;AAAA,MACjB,CAAC,UAAU,+BAA+B,KAAK;AAAA,IACjD,CAAC;AAAA;AAAA;AAAA,EAGP;AACF;AA7EqB,YACZ,SAAS;AAAA;AAAA;AAAA;AAAA;AAOR;AAAA,EADP,MAAM;AAAA,GAPY,YAQX;AARW,cAArB;AAAA,EADC,cAAc,cAAc;AAAA,GACR;",
  "names": []
}
