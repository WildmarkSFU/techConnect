import { WeavyContext } from './weavy-context';
import { LocaleModule, configureLocalization } from '@lit/localize';

/**
 * The locale used in the source files.
 */
export declare const SOURCE_LOCALE = "en";
export interface WeavyLocalizationProps {
    locales: [string, LocaleModule | Promise<LocaleModule> | (() => Promise<LocaleModule>)][];
    localization?: ReturnType<typeof configureLocalization>;
    locale: string;
}
export declare const WeavyLocalizationMixin: (base: typeof WeavyContext) => {
    new (options: import('../types/weavy.types').WeavyContextOptionsType): {
        _locales: Map<string, LocaleModule | Promise<LocaleModule> | (() => Promise<LocaleModule>)>;
        locales: [string, LocaleModule | Promise<LocaleModule> | (() => Promise<LocaleModule>)][];
        _locale: string;
        localization?: {
            getLocale: (() => string) & {
                _LIT_LOCALIZE_GET_LOCALE_?: undefined;
            };
            setLocale: ((newLocale: string) => Promise<void>) & {
                _LIT_LOCALIZE_SET_LOCALE_?: undefined;
            };
        } | undefined;
        /**
         * Selected locale. The locale must be pre configured in `.locales`.
         */
        locale: string;
        loadLocale(newLocale: string): Promise<LocaleModule>;
        configureLocalization(): void;
        readonly weavySid: string;
        readonly weavyId: string;
        readonly host: HTMLElement;
        "__#12@#hostContextProvider"?: import('../utils/context-provider').WyContextProvider<{
            __context__: import("./weavy-context").WeavyContextType;
        }, Partial<import("lit").ReactiveControllerHost> & HTMLElement> | undefined;
        cloudFilePickerUrl: string | URL | undefined;
        confluenceAuthenticationUrl: string | URL | undefined;
        confluenceProductName: string | undefined;
        disableEnvironmentImports: boolean | undefined;
        gcTime: number | undefined;
        modalParent: string | undefined;
        reactions: string[] | undefined;
        scrollBehavior: "smooth" | "instant" | "auto" | undefined;
        staleTime: number | undefined;
        tokenFactoryRetryDelay: number | undefined;
        tokenFactoryTimeout: number | undefined;
        zoomAuthenticationUrl: string | URL | undefined;
        "__#12@#resolveUrl"?: ((url: URL) => void) | undefined;
        "__#12@#whenUrl": Promise<unknown>;
        whenUrl(): Promise<void>;
        "__#12@#url"?: URL | undefined;
        url: string | URL | undefined;
        "__#12@#isDestroyed": boolean;
        readonly isDestroyed: boolean;
        destroy(): void;
    };
    /**
     * The locale used in the Weavy source.
     */
    readonly sourceLocale: "en";
    readonly version: string;
    readonly sourceName: string;
    defaults: import('../types/weavy.types').WeavyOptions;
};
//# sourceMappingURL=localization.d.ts.map