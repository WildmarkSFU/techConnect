import { WeavyContextProps } from '../types/weavy.types';
import { UserType } from '../types/users.types';
import { ConfluenceResourceType } from '../types/confluence.types';
import { LitElement, PropertyValueMap, nothing } from 'lit';

export default class WyConfluencePicker extends LitElement {
    static styles: import('lit').CSSResult;
    private weavyContext?;
    user: UserType;
    unauthorized: boolean;
    cloudHost?: string;
    cloudId?: string;
    spaceKey?: string;
    spaceId?: string;
    private dispatchSubmit;
    private dispatchUnauthorized;
    handleResourceClick(e: MouseEvent, resource: ConfluenceResourceType): void;
    handleSpaceClick(e: MouseEvent, id: string | undefined, key: string | undefined): void;
    handlePageClick(e: MouseEvent, url: string, id: string, title: string): void;
    private confluenceQuery;
    private confluenceResourceQuery;
    onMessage: (e: MessageEvent) => Promise<void>;
    connectedCallback(): void;
    protected willUpdate(changedProperties: PropertyValueMap<this & WeavyContextProps>): void;
    render(): import('lit-html').TemplateResult<1> | typeof nothing;
    protected updated(_changedProperties: PropertyValueMap<this & WeavyContextProps>): void;
    disconnectedCallback(): void;
}
//# sourceMappingURL=wy-confluence-picker.d.ts.map