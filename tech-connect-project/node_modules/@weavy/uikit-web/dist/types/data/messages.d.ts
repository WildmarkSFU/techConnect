import { MessageType, MutateMessageProps, MessagesResultType, MessageMutationContextType } from '../types/messages.types';
import { WeavyContextType } from '../client/weavy-context';
import { InfiniteQueryObserverOptions, MutationKey, InfiniteData } from '@tanstack/query-core';

export declare function getMessagesOptions(weavyContext: WeavyContextType, appId: number | null, options?: Object): InfiniteQueryObserverOptions<MessagesResultType, Error, InfiniteData<MessagesResultType>>;
export declare function getAddMessageMutationOptions(weavyContext: WeavyContextType, mutationKey: MutationKey): {
    mutationFn: (variables: MutateMessageProps) => Promise<any>;
    mutationKey: MutationKey;
    onMutate: (variables: MutateMessageProps) => Promise<MessageMutationContextType>;
    onSuccess: (data: MessageType, variables: MutateMessageProps, context: MessageMutationContextType) => void;
};
//# sourceMappingURL=messages.d.ts.map