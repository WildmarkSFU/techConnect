import { WeavyContextProps } from './types/weavy.types';
import { QueryController } from './controllers/query-controller';
import { RealtimeCommentEventType, RealtimeReactionEventType } from './types/realtime.types';
import { FeaturesConfigType, FeaturesListType } from './types/features.types';
import { UserType } from './types/users.types';
import { AppType } from './types/app.types';
import { WeavyContextType } from './client/context-definition';
import { ContextConsumer } from '@lit/context';
import { LitElement, PropertyValues } from 'lit';

export declare class WyComments extends LitElement {
    static styles: import('lit').CSSResult[];
    protected weavyContextConsumer?: ContextConsumer<{
        __context__: WeavyContextType;
    }, this>;
    protected weavyContext?: WeavyContextType;
    user?: UserType;
    uid?: string;
    cssClass?: string;
    availableFeatures?: FeaturesListType;
    features: FeaturesConfigType;
    /**
     * Event: New comment created.
     * @event wy:comment_created
     */
    realtimeCommentCreatedEvent: (realtimeEvent: RealtimeCommentEventType) => CustomEvent<RealtimeCommentEventType>;
    /**
     * Event: Comment reaction added.
     * @event wy:reaction_added
     */
    realtimeReactionAddedEvent: (realtimeEvent: RealtimeReactionEventType) => CustomEvent<RealtimeReactionEventType>;
    /**
     * Event: Comment reaction removed.
     * @event wy:reaction_removed
     */
    realtimeReactionRemovedEvent: (realtimeEvent: RealtimeReactionEventType) => CustomEvent<RealtimeReactionEventType>;
    protected app?: AppType;
    protected appQuery: QueryController<AppType>;
    protected userQuery: QueryController<UserType>;
    protected featuresQuery: QueryController<FeaturesListType>;
    constructor();
    scheduleUpdate(): Promise<void>;
    handleRealtimeCommentCreated: (realtimeEvent: RealtimeCommentEventType) => void;
    handleRealtimeReactionAdded: (realtimeEvent: RealtimeReactionEventType) => void;
    handleRealtimeReactionDeleted: (realtimeEvent: RealtimeReactionEventType) => void;
    private unsubscribeToRealtime;
    willUpdate(changedProperties: PropertyValues<this & WeavyContextProps & {
        app: AppType;
    }>): void;
    render(): import('lit-html').TemplateResult<1>;
    disconnectedCallback(): void;
}
//# sourceMappingURL=wy-comments.d.ts.map