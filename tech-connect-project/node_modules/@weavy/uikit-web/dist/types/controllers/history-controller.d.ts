import { ReactiveController, ReactiveControllerHost } from 'lit';

export declare class HistoryController<T = ReactiveControllerHost> implements ReactiveController {
    host: ReactiveControllerHost;
    prefixKey?: string;
    properties?: Array<keyof T>;
    prevPropertyValues?: {
        [key: PropertyKey]: unknown;
    };
    private _backCount;
    constructor(host: ReactiveControllerHost, prefixKey?: string, properties?: Array<keyof T>);
    get hasBackNavigation(): boolean;
    back(): void;
    backAll(): void;
    observe(properties: Array<keyof T>, prefixKey?: string): void;
    /**
     * Method to manually push history
     */
    pushCurrentState(): void;
    private updatePrevPropertyValues;
    private restoreHistory;
    hostConnected(): void;
    hostUpdated(): void;
    hostDisconnected(): void;
}
//# sourceMappingURL=history-controller.d.ts.map