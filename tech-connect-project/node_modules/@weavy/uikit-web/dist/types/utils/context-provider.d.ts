import { Options } from './context/controllers/context-provider';
import { ReactiveControllerHost } from 'lit';
import { Context, ContextProvider, ContextType } from '@lit/context';

type ReactiveElementHost = Partial<ReactiveControllerHost> & HTMLElement;
export declare class WyContextProvider<T extends Context<unknown, unknown>, HostElement extends ReactiveElementHost = ReactiveElementHost> extends ContextProvider<T, HostElement> {
    private readonly _context;
    protected isAttached: boolean;
    constructor(host: HostElement, options: Options<T>);
    /** @deprecated Use new ContextProvider(host, options) */
    constructor(host: HostElement, context: T, initialValue?: ContextType<T>);
    dispatchWhenConnected(): void;
    detachListeners(): void;
}
export {};
//# sourceMappingURL=context-provider.d.ts.map